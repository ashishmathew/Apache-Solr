relevance score
  - TF-IDF term frequency - Inverse Document frequency (word being uncommon across other documents)

Solr is web application which runs on the Jetty container which in turn runs on the JVM

Query structure
  - /select
  - q
  - fq
  - sort
  - start,rows
  - fl 
  - df - (did not understand. Need to check this again)


solr document - > http - > update doc service - >  (tokenizer, token filter) <- schema.xml 
                                                          |
                                                          |
                                                  Lucene Index


Design the schema 
  - Schemaless 
  - Schema API

  curl -X GET 'http://localhost:8983/solr/admin/cores?action=create&name=search_twitter&instanceDir=path of configset

managed-schema sections
Document Granularity
Document identification

Indexed fields
Stored fields 
DocValues fields
multivalues fields
Dynamic fields
Copy fields
Field Types
  - string
  - date

Manipulating the index 
  - Advanced atomic updates
  - In place updates
  - optimistic concurrency control 
  


